name: Build and Release

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: replace commit id
        run: sed -i "s/GIT_COMMIT_SHA1/$(git log -n 1 --pretty=format:'%h')/" main/service/device_service.cpp

      - name: esp-idf build
        run: docker run --rm -v $PWD:/project -w /project -u $UID -e HOME=/tmp intemd/esp-adf:v2.7-idf-v5.2-esp32 idf.py build

      - name: Collect release files
        run: |
          mkdir -p release
          cp build/bootloader/bootloader.bin release/
          cp build/partition_table/partition-table.bin release/
          cp build/ota_data_initial.bin release/
          cp build/${{ github.event.repository.name }}.bin release/

      - name: Upload artifacts to GitHub Actions
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-firmware-${{ github.ref_name }}
          path: release/*

      - name: Create zip archive
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cd release
          zip ../${{ github.event.repository.name }}-firmware-${{ github.ref_name }}.zip *

      - name: Upload zip to GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: ${{ github.event.repository.name }}-firmware-${{ github.ref_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
